{"ast":null,"code":"import _regeneratorRuntime from\"C:/dev/food-finder-app/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/dev/food-finder-app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";function search(_x){return _search.apply(this,arguments);}// unsure why the above works but this does not\n// async function search() {\n//     fetch('/search')\n//         .then((res) => {return res.json()});\n// }\nfunction _search(){_search=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(item){var res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('/search',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({item:item,city:\"Seattle\"})});case 2:res=_context.sent;return _context.abrupt(\"return\",res.json());case 4:case\"end\":return _context.stop();}},_callee);}));return _search.apply(this,arguments);}export default search;","map":{"version":3,"names":["search","item","fetch","method","headers","body","JSON","stringify","city","res","json"],"sources":["C:/dev/food-finder-app/client/src/request.js"],"sourcesContent":["async function search(item) {\r\n    const res = await fetch('/search', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({item: item, city: \"Seattle\"}),\r\n    })\r\n    return res.json();\r\n}\r\n\r\n\r\n// unsure why the above works but this does not\r\n\r\n// async function search() {\r\n\r\n//     fetch('/search')\r\n//         .then((res) => {return res.json()});\r\n// }\r\n\r\n\r\nexport default search;"],"mappings":"8PAAeA,OAAM,2CAYrB;AAEA;AAEA;AACA;AACA;AAAA,qFAlBA,iBAAsBC,IAAI,iJACJC,MAAK,CAAC,SAAS,CAAE,CAC/BC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAACN,IAAI,CAAEA,IAAI,CAAEO,IAAI,CAAE,SAAS,CAAC,CACtD,CAAC,CAAC,QANIC,GAAG,+CAOFA,GAAG,CAACC,IAAI,EAAE,uDACpB,yCAYD,cAAeV,OAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}